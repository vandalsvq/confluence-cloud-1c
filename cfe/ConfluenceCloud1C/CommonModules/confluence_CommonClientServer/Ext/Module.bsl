
#Область ПрограммныйИнтерфейс

// Возвращает значение свойства структуры.
//
// Параметры:
//   Структура - Структура
//             - ФиксированнаяСтруктура - объект, из которого необходимо прочитать значение ключа.
//   Ключ - Строка - имя свойства структуры, для которого необходимо прочитать значение.
//   ЗначениеПоУмолчанию - Произвольный - возвращается когда в структуре нет значения по указанному
//                                        ключу.
//       Для скорости рекомендуется передавать только быстро вычисляемые значения (например примитивные типы),
//       а инициализацию более тяжелых значений выполнять после проверки полученного значения (только если это
//       требуется).
//
// Возвращаемое значение:
//   Произвольный - значение свойства структуры. ЗначениеПоУмолчанию если в структуре нет указанного свойства.
//
Функция СвойствоСтруктуры(Структура, Ключ, ЗначениеПоУмолчанию = Неопределено) Экспорт
	Если НЕ ТипЗнч(Структура) = Тип("Структура") Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Результат = ЗначениеПоУмолчанию;
	Если Структура.Свойство(Ключ, Результат) Тогда
		Возврат Результат;
	Иначе
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
КонецФункции

// Вычисляет значение из соответствия по полному пути. Актуально для получения значения
// по длинной цепочки вложенных соответствий (например из результата чтения JSON в соответствие).
//
// Например: если соответствие имеет структуру Ключ - строка, Значение - соответствие/значение
// Необходимо получить значение свойства Ключ1 > Ключ2 > Ключ3, предполагая что значением каждого
// ключа (кроме последнего) будет Соответствие. При этом если на любом этапе будет получено значение
// не типа "Соответствие" функция вернет значение параметра ПоУмолчанию. Аналогично, если на
// последнем ключе будет получено значение Неопределено
//
// Параметры:
//	Соответствие 	- Соответствие
//		Ключ - Строка - 
//		Значение - Соответствие, Произвольный
//	ПутьКСвойству 	- Строка - в качестве разделителя используется символ "/"
//	ПоУмолчанию		- Произвольный - значение возвращаемое по умолчанию, если целевое значение не получено
//
// Возвращаемое значение:
//   Произвольный
// 
Функция СвойствоСоответствия(знач Соответствие, знач ПутьКСвойству, знач ПоУмолчанию = Неопределено, знач КакЧисло = Ложь) Экспорт
	МассивИмен = СтрРазделить(ПутьКСвойству, "/", Ложь);
	Для Индекс = 0 По МассивИмен.ВГраница() Цикл
		ИмяСвойства = СокрЛП(МассивИмен[Индекс]);
		
		Если Индекс = 0 Тогда
			ЗначениеСоответствия = Соответствие.Получить(ИмяСвойства);
		Иначе 
			ЗначениеСоответствия = ЗначениеСоответствия.Получить(ИмяСвойства);
		КонецЕсли;
		
		Если Индекс <> МассивИмен.ВГраница() Тогда
			ЗначениеСоответствия = ?(НЕ ТипЗнч(ЗначениеСоответствия) = Тип("Соответствие"),
				Новый Соответствие,
				ЗначениеСоответствия);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеСоответствия = Неопределено Тогда
		Возврат ПоУмолчанию;
	ИначеЕсли КакЧисло = Истина Тогда
		ЗначениеТип = ТипЗнч(ЗначениеСоответствия);
		Если ЗначениеТип = Тип("Число") Тогда
			Возврат ЗначениеСоответствия;
		ИначеЕсли ЗначениеТип = Тип("Строка") Тогда
			Возврат СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ЗначениеСоответствия);
		Иначе 
			Возврат 0;
		КонецЕсли;
	Иначе 
		Возврат ЗначениеСоответствия;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс_ВремяВСекунды

// Возвращает число секунд в месяце
//
// Параметры:
//	ЧислоДней - Число - по умолчанию 30
//
// Возвращаемое значение:
//   Число
// 
Функция МесяцВСекундах(знач ЧислоДней = 30) Экспорт
	Возврат ЧислоДней * ДеньВСекундах();
КонецФункции

// Возвращает число секунд в неделе
//
// Возвращаемое значение:
//   Число
// 
Функция НеделяВСекундах() Экспорт
	Возврат 7 * ДеньВСекундах();
КонецФункции

// Возвращает число секунд в дне
//
// Возвращаемое значение:
//   Число
// 
Функция ДеньВСекундах() Экспорт
	Возврат 24 * ЧасВСекундах();
КонецФункции

// Возвращает число секунд в часе
//
// Возвращаемое значение:
//   Число
// 
Функция ЧасВСекундах() Экспорт 
	Возврат 3600;
КонецФункции

#КонецОбласти
