
#Область УправлениеФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;

	#Область Наборы
	
	//Если ИмяРеквизита = "РеквизитыРазделПоУмолчанию" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "ИдентификаторРаздела");
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "СкрытьПолеВводаРаздела");
	//КонецЕсли;

	#КонецОбласти
	
	#Область Элементы
	
	Если ИмяРеквизита = "ИдентификаторРаздела" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИдентификаторРаздела", "Видимость", НЕ Объект.СкрытьПолеВводаРаздела);
	КонецЕсли;

	#КонецОбласти 
	
	#Область ТабЧасть_Имя
	
	//Если ИмяРеквизита = "ИмяТабличнойЧастиОтветственный" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ИмяТабличнойЧастиОтветственный", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Ответственный));
	//КонецЕсли;

	#КонецОбласти
	
	#Область Команды
	
	//Если ИмяРеквизита = "КомандаЗаполнить" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ТаблицаФормыЗаполнить", "Видимость", НЕ Объект.Проведен);
	//КонецЕсли;

	#КонецОбласти 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	//Форма.ТолькоПросмотр = (Форма.СостоянияЗаблокировано.Найти(Форма.СведенияОЗаявкеСостояние) <> Неопределено);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИдентификаторРазделаПриИзменении(Элемент)
	
	ОбновитьДеревоСтраницНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если НЕ СтрНачинаетсяС(ДанныеСобытия.Element.baseURI, Объект.АдресСервера) Тогда
		Возврат;
	КонецЕсли;
	
	// надо предлагать ссылки сторонние открывать в другом окне
	
	Попытка
		ДанныеСсылки = ПолучитьДанныеСсылкиПоЭлементу(ДанныеСобытия.Element.dataset);
	Исключение
		ДанныеСсылки = ПолучитьДанныеСсылкиПоЭлементу(Новый Структура);
	КонецПопытки;
	
	ПолныйАдресСсылки		= ДанныеСобытия.Element.href;
	ТипДанныхСсылки			= ДанныеСсылки.linkedResourceType;
	ИдентификаторСтраницы	= ДанныеСсылки.linkedResourceId;
	
	Если ТипДанныхСсылки = "page" Тогда
		СтандартнаяОбработка = Ложь;
		ВыполнитьПереходНаСтраницу(ИдентификаторСтраницы);
	ИначеЕсли ЗначениеЗаполнено(ДанныеСсылки.imageSrc) Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьКартинкуВНовомОкне(ДанныеСсылки.imageSrc);
	ИначеЕсли НЕ ПустаяСтрока(ПолныйАдресСсылки) И Объект.ОткрыватьВнешниеСсылкиВ1С = Ложь Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(ПолныйАдресСсылки,, Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоСтраниц

&НаКлиенте
Процедура ДеревоСтраницПередРазворачиванием(Элемент, Строка, Отказ)
	ТекущиеДанные = ЭтотОбъект.ДеревоСтраниц.НайтиПоИдентификатору(Строка);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПодчиненныеЗаполнены Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПодчиненныеСтраницыДереваНаКлиенте(ТекущиеДанные, ТекущиеДанные.Идентификатор);
	ТекущиеДанные.ПодчиненныеЗаполнены = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ДеревоСтраниц.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьПереходНаСтраницу(ТекущиеДанные.Идентификатор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияРеквизитов = Обработки.confluence_БазаЗнаний.ПолучитьНастройкиИзХранилища();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.АдресСервера) Тогда
		ПредложитьВыполнитьНастройкиНаКлиенте();
	Иначе 
		ОбновитьТаблицуПространстваНаКлиенте();
		ОбновитьСписокВыбораПространствНаКлиенте();
		ОбновитьДеревоСтраницНаКлиенте();
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	
	ОткрытьФормуНастройкиНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов
 
&НаКлиенте
Процедура ВыполнитьНастройкиВопросЗавершение(РезультатВопроса, ПараметрыВыполнения) Экспорт
	Если НЕ РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ЭтотОбъект.Закрыть();
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуНастройкиНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнениеНастройкиЗавершение(Результат, ДопПараметры) Экспорт	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ЗаполнитьЗначенияСвойств(Объект, Результат);
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.АдресСервера) Тогда
		Возврат;
	КонецЕсли;
		
	ОбновитьТаблицуПространстваНаКлиенте();
	ОбновитьСписокВыбораПространствНаКлиенте();
	ОбновитьДеревоСтраницНаКлиенте();
	
	УстановитьУсловноеОформление(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ПредложитьВыполнитьНастройкиНаКлиенте()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьНастройкиВопросЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru='Обработке требуется выполнить настройку. Открыть форму настройки?'"),
		РежимДиалогаВопрос.ОКОтмена,
		60,
		КодВозвратаДиалога.ОК,,
		КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте 
Процедура ОткрытьФормуНастройкиНаКлиенте()
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнениеНастройкиЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.confluence_БазаЗнаний.Форма.ФормаНастройки",,
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте 
Процедура ВыполнитьПереходНаСтраницуРаздела()
	ИдентификаторСтраницы = ПолучитьИдентификаторСтраницыПространстваНаСервере();
	Если НЕ ПустаяСтрока(ИдентификаторСтраницы) Тогда
		ВыполнитьПереходНаСтраницу(ИдентификаторСтраницы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура ВыполнитьПереходНаСтраницу(знач ИдентификаторСтраницы)
	Если НЕ ЗначениеЗаполнено(ИдентификаторСтраницы) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ТекущаяСтраницаИдентификатор = ИдентификаторСтраницы;
	
	ЭтотОбъект.ПолеHTML = ПолучитьСодержимоеТекущейСтраницыНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуПространстваНаКлиенте()
	ЭтотОбъект.Пространства.Очистить();
	
	НастройкиПодключения	= confluence_ApiClientServer.get_connection_settings(Объект.АдресСервера);
	ПараметрыЗапроса		= confluence_ApiClientServer.get_all_spaces_params(0, 0); 
	
	РезультатЗапроса = confluence_ApiClientServer.get_all_spaces(НастройкиПодключения, ПараметрыЗапроса); 
	Если confluence_ApiClientServer.check_error(РезультатЗапроса, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтруктураРаздела Из РезультатЗапроса.Значения Цикл
		НоваяСтрока = ЭтотОбъект.Пространства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураРаздела);
		
		НоваяСтрока.СтраницаИдентификатор = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			СтруктураРаздела.ДомашняяСтраница, "Идентификатор");
			
		НоваяСтрока.СсылкаПросмотр = НастройкиПодключения.АдресСервераWiki + СтруктураРаздела.ДомашняяСтраница.Ссылки.Просмотр;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьСписокВыбораПространствНаКлиенте()
	Элементы.ИдентификаторРаздела.СписокВыбора.Очистить();
	
	Для Каждого СтрокаТаблицы Из ЭтотОбъект.Пространства Цикл
		Элементы.ИдентификаторРаздела.СписокВыбора.Добавить(СтрокаТаблицы.Идентификатор, СтрокаТаблицы.Наименование);
	КонецЦикла;
	
	Если Элементы.ИдентификаторРаздела.СписокВыбора.НайтиПоЗначению(Объект.ИдентификаторРаздела) = Неопределено Тогда
		Объект.ИдентификаторРаздела = 0;
	Иначе
		Объект.ИдентификаторРаздела = Объект.ИдентификаторРаздела;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьДеревоСтраницНаКлиенте()
	
	СтраницаПространства = ПолучитьИдентификаторСтраницыПространстваНаСервере();
	Если ПустаяСтрока(СтраницаПространства) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указано пространство'"), ,
			"ИдентификаторПространства"); 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПодчиненныеСтраницыДереваНаКлиенте(ЭтотОбъект.ДеревоСтраниц, СтраницаПространства);
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьПодчиненныеСтраницыДереваНаКлиенте(знач ЭлементРодитель, знач ИдентификаторРодитель)
	
	ЭлементРодитель.ПолучитьЭлементы().Очистить();
	
	НастройкиПодключения	= confluence_ApiClientServer.get_connection_settings(Объект.АдресСервера);
	ПараметрыЗапроса		= confluence_ApiClientServer.get_page_child_by_type_params(0, 0);
	
	РезультатЗапроса = confluence_ApiClientServer.get_child_pages(НастройкиПодключения, ИдентификаторРодитель);
	Если confluence_ApiClientServer.check_error(РезультатЗапроса, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтруктураКонтента Из РезультатЗапроса.Значения Цикл
		НоваяСтрока = ЭлементРодитель.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураКонтента);
		
		НоваяСтрока.СсылкаПросмотр = НастройкиПодключения.АдресСервераWiki + СтруктураКонтента.Ссылки.Просмотр;
		
		// если существуют подчиненные
		Если НоваяСтрока.ЕстьПодчиненные Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура ОткрытьКартинкуВНовомОкне(знач ПутьККартинке)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПутьККартинке", ПутьККартинке);
	
	ОткрытьФорму("Обработка.confluence_БазаЗнаний.Форма.ФормаПросмотраКартинок",
		ПараметрыФормы,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьСодержимоеТекущейСтраницыНаКлиенте()
	НастройкиПодключения = confluence_ApiClientServer.get_connection_settings(Объект.АдресСервера);
	
	СтруктураКонтента = confluence_ApiClientServer.get_page_content(НастройкиПодключения, ЭтотОбъект.ТекущаяСтраницаИдентификатор);
	Если confluence_ApiClientServer.check_error(СтруктураКонтента, Истина) Тогда
		Возврат "";
	КонецЕсли;
	
	ЭтотОбъект.ТекущаяСтраницаПредставление = СтруктураКонтента.Заголовок;
	
	Возврат confluence_ApiClientServer.convert_storage_to_view(НастройкиПодключения, СтруктураКонтента); 
КонецФункции

&НаКлиенте 
Функция ПолучитьДанныеСсылкиПоЭлементу(знач dataset)
	ИменаКолонок = "baseUrl,height,imageSrc,linkedResourceContainerId,linkedResourceContainerVersion"
		+ ",linkedResourceContentType,linkedResourceDefaultAlias,linkedResourceId,linkedResourceType"
		+ ",linkedResourceVersion,mediaId,mediaType,unresolvedCommentCount,width";
		
	Структура = Новый Структура(ИменаКолонок);
	ЗаполнитьЗначенияСвойств(Структура, dataset);
	
	Возврат Структура;
КонецФункции

&НаСервере 
Функция ПолучитьИдентификаторСтраницыПространстваНаСервере()
	СтруктураОтбора = Новый Структура("Идентификатор", Объект.ИдентификаторРаздела);
	СтрокиПространства = ЭтотОбъект.Пространства.НайтиСтроки(СтруктураОтбора);
	Если СтрокиПространства.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат СтрокиПространства[0].СтраницаИдентификатор;
КонецФункции

&НаКлиенте
Процедура ОткрыватьВнешниеСсылкиВБраузере(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_Раздел
#КонецОбласти

 
