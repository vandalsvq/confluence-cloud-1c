
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БазаЗнанийПриИзменении(Элемент)
	
	ПрочитатьНастройкиПодключения(ЭтотОбъект);
	ОбновитьТаблицуПространстваНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицы = ЭтотОбъект.РезультатПоиска.НайтиПоИдентификатору(ВыбранноеЗначение);
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПолеПоиска = СтрокаТаблицы.Заголовок;
	
	ЭтотОбъект.АдресСсылки				= СтрокаТаблицы.СсылкаПросмотр;
	ЭтотОбъект.АдресСсылкиПредставление	= СтрокаТаблицы.Заголовок;
	ЭтотОбъект.Описание					= СтрокаТаблицы.Описание;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = ПустаяСтрока(Текст);
	ДанныеВыбора = ВыполнитьПоискСтатьи(Текст, 20);
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка = ПустаяСтрока(Текст);
	ДанныеВыбора = ВыполнитьПоискСтатьи(Текст, 20);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.БазаЗнаний = Справочники.confluence_БазыЗнаний.ПолучитьЭлементПоУмолчанию();
	
	ЭтотОбъект.ПоискТолькоПоЗаголовкам		= Истина;
	ЭтотОбъект.ПоискВнутриТекущейИерархии	= Ложь;
	
	ПрочитатьНастройкиПодключения(ЭтотОбъект);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ФормаВыбратьИЗакрыть", "Видимость", Параметры.РежимВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.АдресСервера) Тогда
		ПредложитьВыполнитьНастройкиНаКлиенте();
	Иначе 
		ОбновитьНачальныеДанныеФормыНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РежимОтладки(Команда)
	Элементы.ФормаРежимОтладки.Пометка = НЕ Элементы.ФормаРежимОтладки.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов

&НаКлиенте
Процедура ВыполнениеНастройкиЗавершение(Результат, ДопПараметры) Экспорт	
	Если НЕ ТипЗнч(Результат) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьНастройкиПодключения(ЭтотОбъект);
	Если ПустаяСтрока(ЭтотОбъект.АдресСервера) Тогда
		Возврат;
	КонецЕсли;
		
	ОбновитьНачальныеДанныеФормыНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ВыбратьИЗакрыть()
	
	Результат = Новый Структура;
	Результат.Вставить("АдресСсылки"	, ЭтотОбъект.АдресСсылки);
	Результат.Вставить("Заголовок"		, ЭтотОбъект.АдресСсылкиПредставление);
	Результат.Вставить("Описание"		, ЭтотОбъект.Описание);
	
	ЭтотОбъект.ОповеститьОВыборе(Результат);
	
	Если ЭтотОбъект.Открыта() Тогда
		ЭтотОбъект.Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Асинх Процедура ПредложитьВыполнитьНастройкиНаКлиенте()
	Ответ = Ждать ВопросАсинх(НСтр("ru='Обработке требуется выполнить настройку. Открыть форму настройки?'"),
		РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.ОК,, КодВозвратаДиалога.Отмена);
	
	Если НЕ Ответ = КодВозвратаДиалога.ОК Тогда
		ЭтотОбъект.Закрыть();
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуНастройкиНаКлиенте();
КонецПроцедуры

&НаКлиенте 
Процедура ОткрытьФормуНастройкиНаКлиенте()
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнениеНастройкиЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.confluence_БазаЗнаний.Форма.ФормаНастройки",,
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьНачальныеДанныеФормыНаКлиенте()
	
	Если НЕ ЗначениеЗаполнено(Объект.БазаЗнаний) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьТаблицуПространстваНаКлиенте();
	
КонецПроцедуры

&НаКлиенте 
Функция ВыполнитьПоискСтатьи(знач Текст, знач Количество)
	
	Если ЭтоАдресСсылки(Текст) Тогда
		Возврат ВыполнитьПоискПоСсылкеНаКлиенте(Текст);
	Иначе 
		Если СтрДлина(Текст) < 4 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Возврат ВыполнитьПоискПоТекстуНаКлиенте(Текст, Количество);
	КонецЕсли;
	
КонецФункции

&НаКлиенте 
Функция ВыполнитьПоискПоСсылкеНаКлиенте(знач Текст)
	
	Если НЕ СтрНачинаетсяС(НРег(Текст), НРег(ЭтотОбъект.АдресСервера)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Подстроки	= СтрРазделить(Текст, "/", Ложь);
	СтраницаИД	= ?(Подстроки.Количество() = 0, "", Подстроки[Подстроки.ВГраница()]);
	Если ПустаяСтрока(СтраницаИД) Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтраницаИД) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	
	НастройкиПодключения	= ПолучитьНастройкиПодключения(ЭтотОбъект);
	ПараметрыЗапроса		= confluence_ApiClientServer.cql_params(, 1);
	
	ТекстОтбора = ПолучитьТекстЗапросаПоиска(Число(СтраницаИД), Ложь);
	
	ДанныеПоиска = confluence_ApiClientServer.cql(НастройкиПодключения, ТекстОтбора, "", ПараметрыЗапроса);
	Если confluence_ApiClientServer.check_error(ДанныеПоиска, Истина) Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	ЗаполнитьРезультатПоиска(Подстроки, СписокВыбора, ДанныеПоиска.Значения);
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиенте 
Функция ВыполнитьПоискПоТекстуНаКлиенте(знач Текст, знач Количество)
	
	СписокВыбора = Новый СписокЗначений;
	
	НастройкиПодключения	= ПолучитьНастройкиПодключения(ЭтотОбъект);
	ПараметрыЗапроса		= confluence_ApiClientServer.cql_params(, Количество);
	
	Подстроки = СтрРазделить(Текст, " ", Ложь);
	ТекстОтбора = ПолучитьТекстЗапросаПоиска(Подстроки);
	
	ДанныеПоиска = confluence_ApiClientServer.cql(НастройкиПодключения, ТекстОтбора, "", ПараметрыЗапроса);
	Если confluence_ApiClientServer.check_error(ДанныеПоиска, Истина) Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	ЗаполнитьРезультатПоиска(Подстроки, СписокВыбора, ДанныеПоиска.Значения);
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиенте 
Процедура ЗаполнитьРезультатПоиска(знач Подстроки, знач СписокВыбора, знач Массив)
	
	ЭтотОбъект.РезультатПоиска.Очистить();
	
	СтрокиРезультат = Новый Массив;
	Для Каждого СтруктураРезультат Из Массив Цикл
		СтрокаТаблицы = ЭтотОбъект.РезультатПоиска.Добавить();
		СтрокаТаблицы.Идентификатор		= СтруктураРезультат.Контент.Идентификатор;
		СтрокаТаблицы.Заголовок			= СтруктураРезультат.Заголовок;
		СтрокаТаблицы.СсылкаПросмотр	= СтруктураРезультат.Ссылка;
		СтрокаТаблицы.Описание			= СтруктураРезультат.Описание;
		СтрокаТаблицы.Пространство		= СтруктураРезультат.Пространство.Заголовок;
		СтрокаТаблицы.Обновлено			= Формат(СтруктураРезультат.Обновлено, "ДЛФ=DDT");
		
		СтрЗаголовок = ОФормитьЗаголовокСтатьи(Подстроки, СтрокаТаблицы.Заголовок, СтрокаТаблицы.Пространство, СтрокаТаблицы.Обновлено);
		СписокВыбора.Добавить(СтрокаТаблицы.ПолучитьИдентификатор(), СтрЗаголовок);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОФормитьЗаголовокСтатьи(знач Подстроки, знач Заголовок, знач Пространство, знач Обновлено)
	ШрифтЖ		= Новый Шрифт( , , Истина);
	ЦветЗеленый = Новый Цвет(0, 128, 0);
	ЦветСерый	= Новый Цвет(128, 128, 128);
	
	НРегЗначение = НРег(Заголовок);
	
	ОстатокСтроки = Заголовок;
	
	МассивЗаголовок = Новый Массив;
	Для Каждого Подстрока Из Подстроки Цикл
		Позиция = СтрНайти(НРегЗначение, Подстрока);
		Если Позиция = 0 Тогда
			МассивЗаголовок = Неопределено;
			Прервать;
		КонецЕсли;
		
		Подстрока1 = Лев(ОстатокСтроки, Позиция - 1);
		Подстрока2 = Сред(ОстатокСтроки, Позиция, СтрДлина(Подстрока));
			
		ОстатокСтроки = Сред(ОстатокСтроки, Позиция + СтрДлина(Подстрока));
		НРегЗначение = НРег(ОстатокСтроки);
			
		МассивЗаголовок.Добавить(Подстрока1);
		МассивЗаголовок.Добавить(Новый ФорматированнаяСтрока(Подстрока2, ШрифтЖ, ЦветЗеленый));
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивЗаголовок) Тогда
		Если НЕ ПустаяСтрока(ОстатокСтроки) Тогда
			МассивЗаголовок.Добавить(ОстатокСтроки);
		КонецЕсли;
		
		СтрЗаголовок = Новый ФорматированнаяСтрока(МассивЗаголовок);
	Иначе 
		СтрЗаголовок = Заголовок;
	КонецЕсли;
	
	СтрПространство = СтрШаблон(НСтр("ru='(%1; %2)'"), Пространство, Формат(Обновлено, "ДФ='dd MMMM yyyy ''г.'''"));
	
	Результат = Новый Массив;
	Результат.Добавить(СтрЗаголовок);
	Результат.Добавить(" ");
	Результат.Добавить(Новый ФорматированнаяСтрока(СтрПространство,, ЦветСерый));
		
	Возврат Новый ФорматированнаяСтрока(Результат);
КонецФункции

&НаКлиенте
Процедура ОбновитьТаблицуПространстваНаКлиенте()
	ЭтотОбъект.Пространства.Очистить();
	
	РезультатЗапроса = ПолучитьПространстваНаКлиенте();
	Если РезультатЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПодключения = ПолучитьНастройкиПодключения(ЭтотОбъект);	
	Для Каждого СтруктураРаздела Из РезультатЗапроса.Значения Цикл
		НоваяСтрока = ЭтотОбъект.Пространства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураРаздела);
	КонецЦикла;
	
	ЗаполнитьСписокВыбораПространств();
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьСписокВыбораПространств()
	
	СписокВыбора = Элементы.КлючПространства.СписокВыбора;
	СписокВыбора.Очистить();
	
	Для Каждого СтрокаТаблицы Из ЭтотОбъект.Пространства Цикл
		СписокВыбора.Добавить(СтрокаТаблицы.Ключ, СтрокаТаблицы.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьПространстваНаКлиенте()
	НастройкиПодключения	= ПолучитьНастройкиПодключения(ЭтотОбъект);
	ПараметрыЗапроса		= confluence_ApiClientServer.get_all_spaces_params(0, 0); 
	
	РезультатЗапроса = confluence_ApiClientServer.get_all_spaces(НастройкиПодключения, ПараметрыЗапроса); 
	Если confluence_ApiClientServer.check_error(РезультатЗапроса, Истина) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезультатЗапроса;
КонецФункции

&НаКлиенте 
Функция ПолучитьТекстЗапросаПоиска(знач Значение, знач ЭтоТекст = Истина)
	Отбор = Новый Массив;
	
	#Область ТипДанных
	confluence_ApiClientServer.cql_addFilterItem(Отбор,
		ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ТипДанных"),
		ВидСравненияКомпоновкиДанных.Равно,
		ПредопределенноеЗначение("Перечисление.confluence_ТипыДанных.Статья"));
	#КонецОбласти 
	
	#Область Пространство
	Если НЕ ПустаяСтрока(Объект.КлючПространства) Тогда
		confluence_ApiClientServer.cql_addFilterItem(Отбор,
			ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.Пространство"),
			ВидСравненияКомпоновкиДанных.Равно,
			Объект.КлючПространства);
	КонецЕсли;
	#КонецОбласти 
	
	#Область ДатаСоздания
	Если ЭтотОбъект.ПериодСоздания <> 0 Тогда
		Если ЗначениеЗаполнено(ЭтотОбъект.ДатаСозданияОт) Тогда
			confluence_ApiClientServer.cql_addFilterItem(Отбор,
				ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ДатаСоздания"),
				ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
				ЭтотОбъект.ДатаСозданияОт);
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭтотОбъект.ДатаСозданияДо) Тогда
			confluence_ApiClientServer.cql_addFilterItem(Отбор,
				ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ДатаСоздания"),
				ВидСравненияКомпоновкиДанных.Меньше,
				КонецДня(ЭтотОбъект.ДатаСозданияДо) + 1);
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти 
	
	#Область ДатаИзменения
	Если ЭтотОбъект.ПериодИзменения <> 0 Тогда
		Если ЗначениеЗаполнено(ЭтотОбъект.ДатаИзмененияОт) Тогда
			confluence_ApiClientServer.cql_addFilterItem(Отбор,
				ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ДатаИзменения"),
				ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
				ЭтотОбъект.ДатаИзмененияОт);
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭтотОбъект.ДатаИзмененияДо) Тогда
			confluence_ApiClientServer.cql_addFilterItem(Отбор,
				ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ДатаИзменения"),
				ВидСравненияКомпоновкиДанных.Меньше,
				КонецДня(ЭтотОбъект.ДатаИзмененияДо) + 1);
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти 
	
	#Область ВИерархии
	МассивСтраниц = Новый Массив;
	Если ЭтотОбъект.ПоискВнутриТекущейИерархии Тогда
		МассивСтраниц.Добавить(ЭтотОбъект.ТекущаяСтраницаИдентификатор);
	ИначеЕсли Объект.ДоступныеСтраницы.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из Объект.ДоступныеСтраницы Цикл
			МассивСтраниц.Добавить(СтрокаТаблицы.Идентификатор);
		КонецЦикла;
	КонецЕсли;
	
	Если МассивСтраниц.Количество() > 0 Тогда
		Если МассивСтраниц.Количество() = 1 Тогда
			Условие 	= ВидСравненияКомпоновкиДанных.Равно;
			Значение	= МассивСтраниц[0];
		Иначе 
			Условие		= ВидСравненияКомпоновкиДанных.ВСписке;
			Значение	= МассивСтраниц;
		КонецЕсли;
		
		confluence_ApiClientServer.cql_addFilterItem(Отбор,
			ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.ВИерархии"),
			Условие,
			Значение);
	КонецЕсли;
	#КонецОбласти 
	
	#Область Идентификатор_Заголовок_Текст
	Если ЭтоТекст Тогда
		МассивПоиск = Новый Массив;
		Для Каждого Подстрока Из Значение Цикл
			МассивПоиск.Добавить(СокрЛП(Подстрока) + "*~");
		КонецЦикла;
		
		СтрокаПоиска = СтрСоединить(МассивПоиск, " ");
		
		ПоискЗаголовок = confluence_ApiClientServer.cql_filterItem(
			ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.Заголовок"),
			ВидСравненияКомпоновкиДанных.Содержит,
			СтрокаПоиска); 
		
		ПоискТекст = confluence_ApiClientServer.cql_filterItem(
			ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.Текст"),
			ВидСравненияКомпоновкиДанных.Содержит,
			СтрокаПоиска); 
		
		Если ЭтотОбъект.ПоискТолькоПоЗаголовкам Тогда
			Отбор.Добавить(ПоискЗаголовок);
		Иначе 
			ГруппаИЛИ = confluence_ApiClientServer.cql_filterGroup(Истина);
			ГруппаИЛИ.Элементы.Добавить(ПоискЗаголовок);
			ГруппаИЛИ.Элементы.Добавить(ПоискТекст);
			
			Отбор.Добавить(ГруппаИЛИ);
		КонецЕсли;
	Иначе 
		ПоискИдентификатор = confluence_ApiClientServer.cql_filterItem(
			ПредопределенноеЗначение("Перечисление.confluence_ПоляCQL.Идентификатор"),
			ВидСравненияКомпоновкиДанных.Равно,
			Значение); 
			
		Отбор.Добавить(ПоискИдентификатор);
	КонецЕсли;
	#КонецОбласти 
	
	ТекстЗапроса = confluence_ApiClientServer.get_cql_filter_text(Отбор); 
	Если Элементы.ФормаРежимОтладки.Пометка Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("CQL: " + ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса; 
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ПрочитатьНастройкиПодключения(знач Форма)
	Настройки = НастройкиПодключенияНаСервере(Форма.Объект.БазаЗнаний);
	ЗаполнитьЗначенияСвойств(Форма, Настройки);
	
	Форма.Объект.ДоступныеСтраницы.Очистить();
	Для Каждого СтруктураСтроки Из Настройки.ДоступныеСтраницы Цикл
		СтрокаТаблицы = Форма.Объект.ДоступныеСтраницы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтруктураСтроки);
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Функция ЭтоАдресСсылки(знач Текст)
	Текст = НРег(СокрЛП(Текст));
	
	Возврат СтрНачинаетсяС(Текст, "http")
		И СтрНайти(Текст, "/") > 0;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПодготовитьОписание(знач СтрокаОписание)
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.НПП, " ");
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.ПС, " ");
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.Таб, " ");
	СтрокаОписание = СокрЛП(СтрокаОписание);
	
	Возврат Лев(СтрокаОписание, 600) + ?(СтрДлина(СтрокаОписание) > 600, "...", "");
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПолучитьНастройкиПодключения(знач Форма)
	Возврат confluence_ApiClientServer.get_connection_settings(Форма.АдресСервера,
		Форма.ПользовательЛогин,
		Форма.ПользовательТокен);
КонецФункции

&НаСервереБезКонтекста 
Функция НастройкиПодключенияНаСервере(знач БазаЗнаний)
	Возврат Справочники.confluence_БазыЗнаний.ПолучитьНастройки(БазаЗнаний);
КонецФункции

#КонецОбласти
